{"version":3,"sources":["../src/case.test.js"],"names":["t","actual","is","console","log","true"],"mappings":"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","file":"case.test.js","sourcesContent":["import test from 'ava';\nimport ensure from './case';\n\ntest('true for no params', t => {\n\tconst actual = ensure();\n\tt.is(actual, true);\n});\n\ntest('true for empty', t => {\n\tconst actual = ensure('');\n\tt.is(actual, true);\n});\n\ntest('true for lowercase', t => {\n\tconst actual = ensure('a');\n\tt.is(actual, true);\n});\n\ntest('false for uppercase', t => {\n\tconst actual = ensure('A');\n\tt.is(actual, false);\n});\n\ntest('true for lowercase on lowercase', t => {\n\tconst actual = ensure('a', 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('false for uppercase on lowercase', t => {\n\tconst actual = ensure('A', 'lowercase');\n\tt.is(actual, false);\n});\n\ntest('true for * on lowercase', t => {\n\tconst actual = ensure('*', 'lowercase');\n\tconsole.log({actual});\n\tt.is(actual, true);\n});\n\ntest('true for uppercase on uppercase', t => {\n\tconst actual = ensure('A', 'uppercase');\n\tt.is(actual, true);\n});\n\ntest('false for lowercase on uppercase', t => {\n\tconst actual = ensure('a', 'uppercase');\n\tt.is(actual, false);\n});\n\ntest('true for * on uppercase', t => {\n\tconst actual = ensure('*', 'uppercase');\n\tt.is(actual, true);\n});\n\ntest('true for sentencecase on sentencecase', t => {\n\tconst actual = ensure('Sentence case', 'sentence-case');\n\tt.is(actual, true);\n});\n\ntest('false for lowercase on sentencecase', t => {\n\tt.is(ensure('sentence case', 'sentence-case'), false);\n});\n\ntest('true for UPPERCASE on sentencecase', t => {\n\tt.is(ensure('UPPERCASE', 'sentence-case'), true);\n});\n\ntest('true for Start Case on sentencecase', t => {\n\tt.is(ensure('Start Case', 'sentence-case'), true);\n});\n\ntest('true for PascalCase on sentencecase', t => {\n\tt.is(ensure('PascalCase', 'sentence-case'), true);\n});\n\ntest('false for kebab-case on sentencecase', t => {\n\tt.is(ensure('kebab-case', 'sentence-case'), false);\n});\n\ntest('false for snake_case on sentencecase', t => {\n\tt.is(ensure('snake_case', 'sentence-case'), false);\n});\n\ntest('false for camelCase on sentencecase', t => {\n\tt.is(ensure('camelCase', 'sentence-case'), false);\n});\n\ntest('true for * on sentence-case', t => {\n\tconst actual = ensure('*', 'sentence-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on camel-case', t => {\n\tconst actual = ensure('*', 'camel-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on kebab-case', t => {\n\tconst actual = ensure('*', 'kebab-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on snake-case', t => {\n\tconst actual = ensure('*', 'snake-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on pascal-case', t => {\n\tconst actual = ensure('*', 'pascal-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on start-case', t => {\n\tconst actual = ensure('*', 'start-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on lowercase', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on uppercase', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'uppercase');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on sentence-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'sentence-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on camel-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'camel-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on kebab-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'kebab-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on snake-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'snake-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on pascal-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'pascal-case');\n\tt.is(actual, true);\n});\n\ntest('true for `Any_CASE_iN_back-quotes` on start-case', t => {\n\tconst actual = ensure('`Any_CASE_iN_back-quotes`', 'start-case');\n\tt.is(actual, true);\n});\n\ntest('true for lowercase `Any_CASE_iN_back-quotes` lowercase on lowercase', t => {\n\tconst actual = ensure(\n\t\t'lowercase `Any_CASE_iN_back-quotes` lowercase',\n\t\t'lowercase'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for UPPERCASE `Any_CASE_iN_back-quotes` UPPERCASE on lowercase', t => {\n\tconst actual = ensure(\n\t\t'UPPERCASE `Any_CASE_iN_back-quotes` UPPERCASE',\n\t\t'lowercase'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for UPPERCASE `Any_CASE_iN_back-quotes` UPPERCASE on uppercase', t => {\n\tconst actual = ensure(\n\t\t'UPPERCASE `Any_CASE_iN_back-quotes` UPPERCASE',\n\t\t'uppercase'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for lowercase `Any_CASE_iN_back-quotes` lowercase on uppercase', t => {\n\tconst actual = ensure(\n\t\t'lowercase `Any_CASE_iN_back-quotes` lowercase',\n\t\t'uppercase'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for fooBar`Any_CASE_iN_back-quotes`fooBar on camel-case', t => {\n\tconst actual = ensure('fooBar`Any_CASE_iN_back-quotes`fooBar', 'camel-case');\n\tt.is(actual, true);\n});\n\ntest('false for Foo Bar`Any_CASE_iN_back-quotes` Foo Bar on camel-case', t => {\n\tconst actual = ensure(\n\t\t'Foo Bar`Any_CASE_iN_back-quotes` Foo Bar',\n\t\t'camel-case'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for foo-bar`Any_CASE_iN_back-quotes`foo-bar on kebab-case', t => {\n\tconst actual = ensure(\n\t\t'foo-bar`Any_CASE_iN_back-quotes`foo-bar',\n\t\t'kebab-case'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for Foo Bar `Any_CASE_iN_back-quotes` Foo Bar on kebab-case', t => {\n\tconst actual = ensure(\n\t\t'Foo Bar `Any_CASE_iN_back-quotes` Foo Bar',\n\t\t'kebab-case'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for foo_bar`Any_CASE_iN_back-quotes`foo_bar on snake-case', t => {\n\tconst actual = ensure(\n\t\t'foo_bar`Any_CASE_iN_back-quotes`foo_bar',\n\t\t'snake-case'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for Foo Bar `Any_CASE_iN_back-quotes` Foo Bar on snake-case', t => {\n\tconst actual = ensure(\n\t\t'Foo Bar `Any_CASE_iN_back-quotes` Foo Bar',\n\t\t'snake-case'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for PascalCase`Any_CASE_iN_back-quotes`PascalCase on pascal-case', t => {\n\tconst actual = ensure(\n\t\t'PascalCase`Any_CASE_iN_back-quotes`PascalCase',\n\t\t'pascal-case'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for Foo Bar `Any_CASE_iN_back-quotes` Foo Bar on pascal-case', t => {\n\tconst actual = ensure(\n\t\t'Foo Bar `Any_CASE_iN_back-quotes` Foo Bar',\n\t\t'pascal-case'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for Foo Bar`Any_CASE_iN_back-quotes` Foo Bar on start-case', t => {\n\tconst actual = ensure(\n\t\t'Foo Bar `Any_CASE_iN_back-quotes`Foo Bar',\n\t\t'start-case'\n\t);\n\tt.is(actual, true);\n});\n\ntest('false for foo_bar`Any_CASE_iN_back-quotes`foo_bar on start-case', t => {\n\tconst actual = ensure(\n\t\t'foo_bar`Any_CASE_iN_back-quotes`foo_bar',\n\t\t'start-case'\n\t);\n\tt.is(actual, false);\n});\n\ntest('true for lowercase `Any_CASE_iN_back-quotes` `Any_CASE_iN_back-quotes` lowercase on lowercase', t => {\n\tconst actual = ensure(\n\t\t'lowercase `Any_CASE_iN_back-quotes` `Any_CASE_iN_back-quotes` lowercase',\n\t\t'lowercase'\n\t);\n\tt.is(actual, true);\n});\n\ntest(\"true for 'Any_CASE_iN_single-quotes' on lowercase\", t => {\n\tconst actual = ensure(\"'Any_CASE_iN_single-quotes'\", 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('true for \"Any_CASE_iN_double-quotes\" on lowercase', t => {\n\tconst actual = ensure('\"Any_CASE_iN_double-quotes\"', 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('true for `lowercasel\"\\'` on lowercase', t => {\n\tconst actual = ensure('`lowercasel\"\\'`', 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('false for `LOWERCASE on lowercase', t => {\n\tconst actual = ensure('`LOWERCASE', 'lowercase');\n\tt.is(actual, false);\n});\n\ntest('true for numeric on camel-case', t => {\n\tt.true(ensure('1.0.0', 'camel-case'));\n});\n\ntest('true for numeric on kebab-case', t => {\n\tt.true(ensure('1.0.0', 'kebab-case'));\n});\n\ntest('true for numeric on snake-case', t => {\n\tt.true(ensure('1.0.0', 'snake-case'));\n});\n\ntest('true for numeric on pascal-case', t => {\n\tt.true(ensure('1.0.0', 'pascal-case'));\n});\n\ntest('true for numeric on uppercase', t => {\n\tt.true(ensure('1.0.0', 'uppercase'));\n});\n\ntest('true for numeric on sentencecase', t => {\n\tt.true(ensure('1.0.0', 'sentencecase'));\n});\n\ntest('true for numeric on lowercase', t => {\n\tt.true(ensure('1.0.0', 'lowercase'));\n});\n"]}
name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  CI: 1
  ARTIFACT_DIR: ./artifacts

jobs:
  commit-watch:
    name: Run Commit Watch
    runs-on: ubuntu-20.04
    if: "github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v2
          with:
            ref: ${{ github.event.pull_request.head.sha }}
            fetch-depth: 0
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: ${{ env.NODE_VERSION }}
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Run Commit Watch
          env:
            COMMIT_WATCH_OUTPUT_DIR: ${{ env.ARTIFACT_DIR }}/
            COMMITWATCH_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            CI_REPO_OWNER: ${{ github.repository_owner }}
            CI_REPO_NAME: ${{ github.event.repository.name }}
            CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
            CI_BASE_BRANCH: origin/${{ github.base_ref }}
          run: yarn dlx commit-watch
        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: commit-watch-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  tests:
    name: Lint, Tests, and Build
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: ${{ env.NODE_VERSION }}
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: ./.yarn/cache
            key: ${{ env.NODE_VERSION }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
        - name: Install dependencies
          run: yarn install --immutable
        - name: Linting
          run: yarn lint:ci
        - name: Tests
          run: yarn test:ci
        - name: Upload Coverage Report
          run: ./.github/codecov.sh $GITHUB_EVENT_PATH
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: reports-and-build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  release:
    name: Publish commit-utils
    runs-on: ubuntu-20.04
    needs: [tests]
    if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v2
          with:
            token: ${{ secrets.GH_TOKEN }}
            fetch-depth: 0
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: ${{ env.NODE_VERSION }}
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: ./.yarn/cache
            key: ${{ env.NODE_VERSION }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
        - name: Install dependencies
          run: yarn install --immutable
        - name: Configure Git
          run: |
            git config --global user.email opensource-leads+bot@tophatmonocle.com
            git config --global user.name tophat-opensource-bot
            git config --global init.defaultBranch master
        - name: Publish Package
          id: publish
          env:
            NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          run: |
            yarn monodeploy --log-level 0 \
              --conventional-changelog-config @tophat/conventional-changelog-config \
              --prepend-changelog CHANGELOG.md \
              --persist-versions
        - name: Commit Changes
          if: ${{ steps.publish.conclusion == 'success' }}
          run: |
            yarn dedupe
            if ! git diff-index --quiet HEAD -- CHANGELOG.md; then
              git push --tags \
                && git add yarn.lock CHANGELOG.md "packages/**/package.json" \
                && git commit -m "chore: release commit-utils [skip ci]" -n \
                && git push
            fi
        - name: Upload Artifacts
          if: ${{ always() }}
          uses: actions/upload-artifact@v2
          with:
            name: reports-and-build-artifacts
            path: |
                ${{ env.ARTIFACT_DIR }}
